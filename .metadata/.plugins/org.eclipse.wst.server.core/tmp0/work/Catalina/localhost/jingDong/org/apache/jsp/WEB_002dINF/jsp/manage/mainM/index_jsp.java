/*
 * Generated by the Jasper component of Apache Tomcat
 * Version: Apache Tomcat/7.0.76
 * Generated at: 2018-05-05 14:38:13 UTC
 * Note: The last modified time of this file was set to
 *       the last modified time of the source file after
 *       generation to assist with modification tracking.
 */
package org.apache.jsp.WEB_002dINF.jsp.manage.mainM;

import javax.servlet.*;
import javax.servlet.http.*;
import javax.servlet.jsp.*;
import java.util.*;

public final class index_jsp extends org.apache.jasper.runtime.HttpJspBase
    implements org.apache.jasper.runtime.JspSourceDependent {

  private static final javax.servlet.jsp.JspFactory _jspxFactory =
          javax.servlet.jsp.JspFactory.getDefaultFactory();

  private static java.util.Map<java.lang.String,java.lang.Long> _jspx_dependants;

  private volatile javax.el.ExpressionFactory _el_expressionfactory;
  private volatile org.apache.tomcat.InstanceManager _jsp_instancemanager;

  public java.util.Map<java.lang.String,java.lang.Long> getDependants() {
    return _jspx_dependants;
  }

  public javax.el.ExpressionFactory _jsp_getExpressionFactory() {
    if (_el_expressionfactory == null) {
      synchronized (this) {
        if (_el_expressionfactory == null) {
          _el_expressionfactory = _jspxFactory.getJspApplicationContext(getServletConfig().getServletContext()).getExpressionFactory();
        }
      }
    }
    return _el_expressionfactory;
  }

  public org.apache.tomcat.InstanceManager _jsp_getInstanceManager() {
    if (_jsp_instancemanager == null) {
      synchronized (this) {
        if (_jsp_instancemanager == null) {
          _jsp_instancemanager = org.apache.jasper.runtime.InstanceManagerFactory.getInstanceManager(getServletConfig());
        }
      }
    }
    return _jsp_instancemanager;
  }

  public void _jspInit() {
  }

  public void _jspDestroy() {
  }

  public void _jspService(final javax.servlet.http.HttpServletRequest request, final javax.servlet.http.HttpServletResponse response)
        throws java.io.IOException, javax.servlet.ServletException {

    final javax.servlet.jsp.PageContext pageContext;
    javax.servlet.http.HttpSession session = null;
    final javax.servlet.ServletContext application;
    final javax.servlet.ServletConfig config;
    javax.servlet.jsp.JspWriter out = null;
    final java.lang.Object page = this;
    javax.servlet.jsp.JspWriter _jspx_out = null;
    javax.servlet.jsp.PageContext _jspx_page_context = null;


    try {
      response.setContentType("text/html;charset=utf-8");
      pageContext = _jspxFactory.getPageContext(this, request, response,
      			null, true, 8192, true);
      _jspx_page_context = pageContext;
      application = pageContext.getServletContext();
      config = pageContext.getServletConfig();
      session = pageContext.getSession();
      out = pageContext.getOut();
      _jspx_out = out;

      out.write('\r');
      out.write('\n');

	String path = request.getContextPath();
	String basePath = request.getScheme() + "://"
			+ request.getServerName() + ":" + request.getServerPort()
			+ path + "/";

      out.write("\r\n");
      out.write("\r\n");
      out.write("<!DOCTYPE HTML PUBLIC \"-//W3C//DTD HTML 4.01 Transitional//EN\">\r\n");
      out.write("<html>\r\n");
      out.write("<head>\r\n");
      out.write("<base href=\"");
      out.print(basePath);
      out.write("\">\r\n");
      out.write("\r\n");
      out.write("<title>后台管理系统</title>\r\n");
      out.write("\r\n");
      out.write("<link href=\"bootstrap/css/bootstrap.min.css\" rel=\"stylesheet\" />\r\n");
      out.write("<script src=\"bootstrap/js/jquery.min.js\" type=\"text/javascript\"></script>\r\n");
      out.write("<script src=\"bootstrap/js/bootstrap.min.js\" type=\"text/javascript\"></script>\r\n");
      out.write("<Style>\r\n");
      out.write("\r\n");
      out.write("*{\r\n");
      out.write("\tmargin:0;\r\n");
      out.write("\tpadding:0;\r\n");
      out.write("}\r\n");
      out.write("#container{\r\n");
      out.write("\twidth: 1300px;\r\n");
      out.write("\tmargin:0px auto;\r\n");
      out.write("}\r\n");
      out.write("#main{\r\n");
      out.write(" background-color: #FFFFF0 ;\r\n");
      out.write("}\r\n");
      out.write("#container{\r\n");
      out.write("\theight:60px;\r\n");
      out.write("}\r\n");
      out.write("#left {\r\n");
      out.write("\theight: 650px;\t\r\n");
      out.write("}\r\n");
      out.write("#right{\r\n");
      out.write("\theight: 850px;\t\r\n");
      out.write("}\r\n");
      out.write("#left{\r\n");
      out.write("\twidth:230px;\r\n");
      out.write("}\r\n");
      out.write("iframe {\r\n");
      out.write("\twidth: 100%;\r\n");
      out.write("\theight: 100%;\r\n");
      out.write("}\r\n");
      out.write("</Style>\r\n");
      out.write("</head>\r\n");
      out.write("\r\n");
      out.write("<body>\r\n");
      out.write("  <div id=\"container\">\r\n");
      out.write("   <div id=\"header\" class=\"row\">\r\n");
      out.write("     <iframe src=\"MHeader\" scrolling=\"no\" frameborder=\"0\" \r\n");
      out.write("\t\t\tname=\"header\" class=\"col-sm-12\"></iframe>\r\n");
      out.write("   </div>\r\n");
      out.write("\t<div id=\"main\" class=\"row\" style=\" background-color: #FFFFF0 ;\">\r\n");
      out.write("\t\t<iframe src=\"MLeft\" scrolling=\"no\" frameborder=\"0\" id=\"left\"\r\n");
      out.write("\t\t\tname=\"left\" class=\"col-sm-3\"></iframe>\r\n");
      out.write("\t\t<iframe src=\"showMProduct\" scrolling=\"no\" frameborder=\"0\" id=\"right\"\r\n");
      out.write("\t\t\tname=\"right\" class=\"col-sm-9\"></iframe>\r\n");
      out.write("\t</div>\r\n");
      out.write("\t<div id=\"footer\" class=\"row\" >\r\n");
      out.write("     <iframe src=\"MFooter\" scrolling=\"no\" frameborder=\"0\" \r\n");
      out.write("\t\t\tname=\"footer\" class=\"col-sm-12\"></iframe>\r\n");
      out.write("   </div>\r\n");
      out.write("  </div>\r\n");
      out.write("</body>\r\n");
      out.write("</html>\r\n");
    } catch (java.lang.Throwable t) {
      if (!(t instanceof javax.servlet.jsp.SkipPageException)){
        out = _jspx_out;
        if (out != null && out.getBufferSize() != 0)
          try {
            if (response.isCommitted()) {
              out.flush();
            } else {
              out.clearBuffer();
            }
          } catch (java.io.IOException e) {}
        if (_jspx_page_context != null) _jspx_page_context.handlePageException(t);
        else throw new ServletException(t);
      }
    } finally {
      _jspxFactory.releasePageContext(_jspx_page_context);
    }
  }
}
